// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<WeightGoalScreen /> renders correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "flex": 1,
      "paddingHorizontal": 10,
      "paddingTop": 20,
    }
  }
>
  <mockNavigationEvents
    onWillFocus={[Function]}
  />
  <Text
    style={
      Object {
        "color": "#616161",
        "fontFamily": "NunitoSans_Regular",
        "fontSize": 43.714285714285715,
        "fontWeight": "normal",
        "marginBottom": 20,
        "textAlign": "center",
      }
    }
  >
    What's your goal?
  </Text>
  <View
    style={
      Object {
        "alignItems": "center",
        "bottom": 0,
        "justifyContent": "center",
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#fff",
          "borderRadius": 3,
          "justifyContent": "space-between",
          "marginVertical": 10,
          "overflow": "visible",
          "shadowColor": "rgba(0,0,0, .4)",
          "shadowOffset": Object {
            "height": 1,
            "width": 1,
          },
          "shadowOpacity": 1,
          "shadowRadius": 1,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "busy": false,
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#9CBE57",
              "borderColor": "#2089dc",
              "borderRadius": 3,
              "borderWidth": 0,
              "flexDirection": "row",
              "justifyContent": "center",
              "padding": 8,
              "paddingHorizontal": 20,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "white",
                "fontFamily": "Lato_Regular",
                "fontSize": 22,
                "marginRight": 10,
                "paddingVertical": 1,
                "textAlign": "left",
                "width": 200,
              }
            }
          >
            Lose Weight
          </Text>
          <View
            style={
              Object {
                "marginHorizontal": 5,
                "overflow": "hidden",
              }
            }
          >
            <View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "justifyContent": "center",
                  }
                }
              >
                <Text />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#fff",
          "borderRadius": 3,
          "justifyContent": "space-between",
          "marginVertical": 10,
          "overflow": "visible",
          "shadowColor": "rgba(0,0,0, .4)",
          "shadowOffset": Object {
            "height": 1,
            "width": 1,
          },
          "shadowOpacity": 1,
          "shadowRadius": 1,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "busy": false,
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#9CBE57",
              "borderColor": "#2089dc",
              "borderRadius": 3,
              "borderWidth": 0,
              "flexDirection": "row",
              "justifyContent": "center",
              "padding": 8,
              "paddingHorizontal": 20,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "white",
                "fontFamily": "Lato_Regular",
                "fontSize": 22,
                "marginRight": 10,
                "paddingVertical": 1,
                "textAlign": "left",
                "width": 200,
              }
            }
          >
            Maintain Weight
          </Text>
          <View
            style={
              Object {
                "marginHorizontal": 5,
                "overflow": "hidden",
              }
            }
          >
            <View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "justifyContent": "center",
                  }
                }
              >
                <Text />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#fff",
          "borderRadius": 3,
          "justifyContent": "space-between",
          "marginVertical": 10,
          "overflow": "visible",
          "shadowColor": "rgba(0,0,0, .4)",
          "shadowOffset": Object {
            "height": 1,
            "width": 1,
          },
          "shadowOpacity": 1,
          "shadowRadius": 1,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "busy": false,
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#9CBE57",
              "borderColor": "#2089dc",
              "borderRadius": 3,
              "borderWidth": 0,
              "flexDirection": "row",
              "justifyContent": "center",
              "padding": 8,
              "paddingHorizontal": 20,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "white",
                "fontFamily": "Lato_Regular",
                "fontSize": 22,
                "marginRight": 10,
                "paddingVertical": 1,
                "textAlign": "left",
                "width": 200,
              }
            }
          >
            Gain Weight
          </Text>
          <View
            style={
              Object {
                "marginHorizontal": 5,
                "overflow": "hidden",
              }
            }
          >
            <View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "justifyContent": "center",
                  }
                }
              >
                <Text />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;
